package Arrays;

public class FirstAndLastInSortedArray {

	
	 public int first(int [] arr, int x){
	        int n =arr.length;
	       int low = 0, high = n - 1, res = -1;
	        while (low <= high) {
	           
	            int mid = (low + high) / 2;
	            if (arr[mid] > x)
	                high = mid - 1;
	            else if (arr[mid] < x)
	                low = mid + 1;
	 
	            
	            else {
	                res = mid;
	                high = mid - 1;
	            }
	        }
	        return res;
	    }


	public int last(int [] arr, int x){
	        int n =arr.length;
	       int low = 0, high = n - 1, res = -1;
	        while (low <= high) {
	           
	            int mid = (low + high) / 2;
	            if (arr[mid] > x)
	                high = mid - 1;
	            else if (arr[mid] < x)
	                low = mid + 1;
	 
	            
	            else {
	                res = mid;
	               low=mid+1;
	            }
	        }
	        return res;
	    }


	    public int[] searchRange(int[] nums, int target) {

	        int arr[] = new int[2];
	        int a=first(nums,target);
	         int b =last(nums,target);
	         arr[0]=a;
	         arr[1]=b;

	         return arr;
	    }
	    
}
